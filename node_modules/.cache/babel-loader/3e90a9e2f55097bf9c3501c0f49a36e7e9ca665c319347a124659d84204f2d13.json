{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst inititalState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  inititalState: inititalState,\n  reducers: {\n    increment(state) {\n      //  here we are allowed to use hte state directly\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    decrease(state, action) {\n      state.counter = state.counter - action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  //  expected prperty singular recduser in which we can put multiple reducers and multiple sate slices\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;","map":{"version":3,"names":["createStore","createSlice","configureStore","inititalState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","decrease","toggleCounter","store","reducer","counterActions","actions"],"sources":["/Users/dev/Downloads/01-starting-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\"\nimport { createSlice, configureStore} from '@reduxjs/toolkit'\nconst inititalState = {counter: 0, showCounter: true}\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  inititalState: inititalState,\n  reducers: {\n    increment(state){\n      //  here we are allowed to use hte state directly\n      state.counter++;\n    },\n    decrement(state){\n      state.counter--;\n    },\n    increase(state, action){\n      state.counter = state.counter + action.payload\n    },\n    decrease(state, action){\n      state.counter = state.counter - action.payload\n    },\n    toggleCounter(state){\n      state.showCounter = !state.showCounter\n    }\n  }\n})\n\n\nconst store = configureStore({\n  //  expected prperty singular recduser in which we can put multiple reducers and multiple sate slices\n  reducer: counterSlice.reducer\n})\n\n\nexport const counterActions = counterSlice.actions;\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAC7D,MAAMC,aAAa,GAAG;EAACC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAI,CAAC;AAErD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,aAAa,EAAEA,aAAa;EAC5BK,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAC;MACd;MACAA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAAS,CAACD,KAAK,EAAC;MACdA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAC;MACrBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDC,QAAQ,CAACL,KAAK,EAAEG,MAAM,EAAC;MACrBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAChD,CAAC;IACDE,aAAa,CAACN,KAAK,EAAC;MAClBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAGF,MAAMY,KAAK,GAAGf,cAAc,CAAC;EAC3B;EACAgB,OAAO,EAAEZ,YAAY,CAACY;AACxB,CAAC,CAAC;AAGF,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAAO;AAClD,eAAeH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}